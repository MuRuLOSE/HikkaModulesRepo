from telethon.types import Message
from .. import loader, utils
import asyncio
import random
from telethon.errors.common import AlreadyInConversationError


"""
    ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  
    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà  
    ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 


    YamiManager
    üìú Licensed under the GNU AGPLv3	
"""

# meta banner: https://0x0.st/HYVA.jpg
# meta desc: desc
# meta developer: @BruhHikkaModules


@loader.tds
class YamiManager(loader.Module):
    """Module for @YamiChat_bot"""

    strings = {
        "name": "YamiManager",
        "timeout-error": "üö´ <b>The bot did not respond within three minutes, it is disabled or you asked it too complex request in /img</b>",
        "wait": "<i>Waiting...</i>\n\nInteresting fact! If the bot doesn't respond within three minutes, there will be an error",
        "alive": "üíñ Bot is alive",
        "dead": "üíî Bot is dead...",
        "answer": "üîÄ <b>Bot answer</b>:\n\n{}",
        "aleardyconv": "‚õî You can't execute more than one command",
        "genimgdisabled": "At the moment generate images disabled:\n\n{}",
        "sub-req": "Subscription is required for yami work, otherwise the module will not be removed and will not work before subscription",
        "copyright": "Result from <a href='tg://resolve?domain=YamiChat_bot'>Yami's bot üíò</a>",
    }

    strings_ru = {
        "timeout-error": "üö´ <b>–ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –≤ —Ç–µ—á–µ–Ω–∏–∏ —Ç—Ä—ë—Ö –º–∏–Ω—É—Ç, –æ–Ω –æ—Ç–∫–ª—é—á—ë–Ω –ª–∏–±–æ –∂–µ –≤—ã –∑–∞–¥–∞–ª–∏ –µ–º—É —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å –≤ /img</b>",
        "wait": "<i>–û–∂–∏–¥–∞—é...</i>\n\n–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç! –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —Ç—Ä—ë—Ö –º–∏–Ω—É—Ç, —Ç–æ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞",
        "alive": "üíñ –ë–æ—Ç –∂–∏–≤!",
        "dead": "üíî –ë–æ—Ç –º—ë—Ä—Ç–≤...",
        "answer": "üîÄ <b>–û—Ç–≤–µ—Ç –±–æ—Ç–∞</b>:\n\n{}",
        "aleardyconv": "‚õî –ù–µ–ª—å–∑—è –≤—ã–ø–æ–ª–Ω—è—Ç—å –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã",
        "genimgdisabled": "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç–∫–ª—é—á–µ–Ω–∞:\n\n{}",
        "sub-req": "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —è–º–∏, –∏–Ω–∞—á–µ –º–æ–¥—É–ª—å –Ω–µ –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω –∏ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ –ø–æ–¥–ø–∏—Å–∫–∏",
        "copyright": "–†–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ <a href='tg://resolve?domain=YamiChat_bot'>–±–æ—Ç–∞ –Ø–º–∏ üíò</a>",
        "_cls_doc": "–ú–æ–¥—É–ª—å –¥–ª—è @YamiChat_bot",
    }

    async def client_ready(self, client, db):
        raise loader.LoadError(
            "<a href='t.me/yamichat_bot'>Yami has been deleted,</a>"
            " so module isn't work, and you can't load it (actually"
            " you can, but it pointless)"
            "\nMore about this: <a href='https://t.me/BruhHikkaModules/603'*click*</a>"
        )

    def __init__(self):
        self.bot = "YamiChat_bot"

    async def check_ban(self, text, message):
        if "–ù–µ –ø–∏—à–∏" in text:
            await utils.answer(
                message, "–ö–∞–∫ —Ç—ã –º–æ–≥ –æ–±–∏–¥–µ—Ç—å —è–º–∏? –¢–µ–ø–µ—Ä—å —è —Ç–æ–∂–µ –æ–±–∏–∂–µ–Ω–∞!"
            )
            return await self.invoke("unloadmod", "YamiManager", message.peer_id)

    @loader.command(
        ru_doc=" [–∫–æ–º–∞–Ω–¥–∞] [–∑–∞–ø—Ä–æ—Å] - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –Ø–º–∏ –±–æ—Ç\n–ü—Ä–∏–º–µ—Ä: .scmmnd /img –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å –∑–∞–ø—Ä–æ—Å–æ–º"
    )
    async def scmmnd(self, message: Message):
        """[cmd] [request] - Send command to Yami bot\nExample: .scmmnd /img arguments with req"""
        args = utils.get_args_raw(message).split()
        req = " ".join(args[1:])

        await utils.answer(message, f"‚òÅ {self.strings['wait']}")
        try:
            async with self.client.conversation(self.bot, timeout=180) as conv:
                try:
                    await conv.send_message(f"{args[0]} {req}")
                    res = await conv.get_response()
                    await self.check_ban(res.raw_text, message)

                    if "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã" in res.raw_text:
                        await utils.answer(
                            message, f"Check @{self.inline.bot_username}"
                        )

                        return await self.request_join(
                            "YamiChannel",
                            f"{self.strings['sub-req']}",
                            assure_joined=True,
                        )

                    if (
                        "‚úÖ –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏ 1-3 –º–∏–Ω—É—Ç—ã, –æ–Ω–æ —Ç–æ–≥–æ —Å—Ç–æ–∏—Ç :3"
                        in res.raw_text
                    ):
                        await asyncio.sleep(10)
                        res = await conv.get_response()

                    elif (
                        "‚ùå–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç–∫–ª—é—á–µ–Ω–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç! –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º!"
                        in res.raw_text
                    ):
                        return await utils.answer(
                            message, self.strings["genimgdisabled"].format(res.text)
                        )

                    await conv.mark_read()

                except asyncio.TimeoutError:
                    return await utils.answer(message, self.strings["timeout-error"])
        except AlreadyInConversationError:
            return await utils.answer(message, self.strings["aleardyconv"])

        if res.media is not None:
            return await utils.answer(
                message,
                res.media,
                caption=self.strings["answer"].format(res.text)
                + (
                    ("\n\n") + self.strings["copyright"]
                    if random.randint(0, 10) <= 5
                    else ""
                ),
                as_file=True,
            )

        else:
            return await utils.answer(
                message,
                self.strings["answer"].format(res.text)
                + (
                    ("\n\n") + self.strings["copyright"]
                    if random.randint(0, 10) <= 5
                    else ""
                ),
            )

    @loader.command(ru_doc=" - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∂–∏–≤ –ª–∏ –±–æ—Ç")
    async def chalive(self, message: Message):
        """- Check, to see if the bot is alive"""
        try:
            async with self.client.conversation(self.bot, timeout=10) as conv:
                try:
                    await conv.send_message("/start")
                    res = await conv.get_response()
                    await self.check_ban(res.raw_text, message)
                except asyncio.TimeoutError:
                    return await utils.answer(message, self.strings["dead"])

                finally:
                    conv.cancel()

        except AlreadyInConversationError:
            return await utils.answer(message, self.strings["aleardyconv"])

        await utils.answer(message, self.strings["alive"])
