# ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# '''–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –∫–∞–∫—É—é —Ç–æ –∏–¥–µ—é, —Ç–æ —É–ø–æ–º—è–Ω–∏—Ç–µ –º–µ–Ω—è –≤ –∫–æ–¥–µ, —Å–ø–∞—Å–∏–±–æ (–Ω–æ —Ñ—É–Ω–∫—Ü–∏—é –ø–∏—à–∏—Ç–µ —Å–∞–º–∏)'''

# ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# Not licensed
# meta developer: @bruhHikkaModules
__version__ = (0, 1, 5)

from telethon.tl.types import Message, ChatAdminRights
from telethon import functions
import asyncio
from .. import loader, utils
import re
from ..inline.types import InlineCall

"""
    ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  
    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà  
    ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 


    SpyEVO
    üìú Licensed under the GNU AGPLv3	
"""

# meta desc: desc
# meta developer: @BruhHikkaModules


@loader.tds
class SpyEVO(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è"""

    strings = {
        "name": "SpyEVO",
    }

    @loader.watcher()
    async def watcher(self, message):
        converts = self.get("converts", 0)
        r_converts = self.get("r_converts", 0)
        case = self.get("case", 0)
        r_case = self.get("r_case", 0)
        mif = self.get("mif", 0)
        crystal = self.get("crystal", 0)
        plasma = self.get("plasma", 0)
        zv = self.get("zv", 0)
        scrap = self.get("scrap", 0)
        medals = self.get("medals", 0)

        if message.chat_id == 5522271758 and message.text == "‚úâ –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –∫–æ–Ω–≤–µ—Ä—Ç.":
            converts += 1
            self.set("converts", converts)
        if (
            message.chat_id == 5522271758
            and message.text == "üßß –¢—ã –Ω–∞—à–µ–ª(–ª–∞) —Ä–µ–¥–∫–∏–π –∫–æ–Ω–≤–µ—Ä—Ç."
        ):
            r_converts += 1
            self.set("r_converts", converts)
        if message.chat_id == 5522271758 and message.text == "üì¶ –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –ö–µ–π—Å!":
            case += 1
            self.set("case", case)
        if (
            message.chat_id == 5522271758
            and message.text == "üó≥ –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –†–µ–¥–∫–∏–π –ö–µ–π—Å!"
        ):
            r_case += 1
            self.set("r_case", r_case)
        if (
            message.chat_id == 5522271758
            and message.raw_text == "üïã –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –ú–∏—Ñ–∏—á–µ—Å–∫–∏–π –ö–µ–π—Å!"
        ):
            mif += 1
            self.set("mif", mif)
        if (
            message.chat_id == 5522271758
            and message.raw_text == "üíé –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –ö–µ–π—Å!"
        ):
            crystal += 1
            self.set("crystal", crystal)
        if message.chat_id == 5522271758 and "üéÜ –¢—ã –Ω–∞—à–µ–ª(–ª–∞) 1 –ø–ª–∞–∑–º—É" in message.text:
            plasma += 1
            self.set("plasma", plasma)
        if message.chat_id == 5522271758 and "üí´" in message.text:
            zv += 1
            self.set("zv", zv)
        if message.chat_id == 5522271758 and "üéÜ –¢—ã –Ω–∞—à–µ–ª(–ª–∞) 2 –ø–ª–∞–∑–º—ã" in message.text:
            plasma += 2
            self.set("plasma", plasma)
        if message.chat_id == 5522271758 and "–ú–µ–¥–∞–ª—å" in message.text:
            pattern = "–ú–µ–¥–∞–ª—å +(.*?)</b>"
            match = re.search(pattern, message.text, re.DOTALL)
            if match:
                medali = int(match.group(1))
                medals += medali
                self.set("medals", medals)
        if message.chat_id == 5522271758 and "–°–∫—Ä–∞–ø" in message.text:
            pattern = "–°–∫—Ä–∞–ø +(.*?)</b>"
            match = re.search(pattern, message.text, re.DOTALL)
            if match:
                scrapi = int(match.group(1))
                scrap += scrapi
                self.set("scrap", scrap)

    @loader.command()
    async def show_spy(self, message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–µ–π—Å—ã –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è"""
        convert = self.get("converts", 0)
        r_convert = self.get("r_converts", 0)
        case = self.get("case", 0)
        r_case = self.get("r_case", 0)
        mif = self.get("mif", 0)
        crystal = self.get("crystal", 0)
        zv = self.get("zv", 0)
        plasma = self.get("plasma", 0)
        medals = self.get("medals", 0)
        scrap = self.get("scrap", 0)
        await utils.answer(
            message,
            f"<b>üíº –í–∞—à–∏ –ö–µ–π—Å—ã (–±—É–¥–µ–º —Ä–∞—Å—Å—Ç—è–≥–∏–≤–∞—Ç—å –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã):</b>\n\n‚úâ <b>–ö–æ–Ω–≤–µ—Ä—Ç—ã:</b> <code>{convert}</code>\nüßß <b>–†–µ–¥–∫–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç—ã:</b> <code>{r_convert}</code>\nüì¶ <b>–ö–µ–π—Å—ã:</b> <code>{case}</code>\nüó≥ <b>–†–µ–¥–∫–∏–µ –∫–µ–π—Å—ã:</b> <code>{r_case}</code>\nüïã <b>–ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∫–µ–π—Å—ã:</b> <code>{mif}</code>\nüíé <b>–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã</b> <code>{crystal}</code>\nüåå<b>–ó–≤–µ–∑–¥–Ω—ã–µ –ö–µ–π—Å—ã:</b> <code>{zv}</code>\n\n<b>üè∫ –†–µ—Å—É—Ä—Å—ã:</b>\n\nüéÜ <b>–ü–ª–∞–∑–º–∞:</b> <code>{plasma}</code>\n\n<b>üë∫ –ë–æ—Å—Å—ã:</b>\n\nüéñ <b>–ú–µ–¥–∞–ª–∏:</b> <code>{medals}</code>\nüî© <b>–°–∫—Ä–∞–ø:</b> <code>{scrap}</code>",
        )

    @loader.command()
    async def clear_spy(self, message):
        """–û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–≤—Å–µ—Ö –∫–µ–π—Å–æ–≤ –∏ —Ç–¥)"""
        await self.inline.form(
            text="–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª—è?",
            message=message,
            reply_markup=[
                [
                    {
                        "text": "–î–∞",
                        "callback": self.cleardb,
                    },
                    {
                        "text": "–ù–µ—Ç",
                        "action": "close",
                    },
                ]
            ],
        )

    async def cleardb(self, call: InlineCall):
        # –ø–∞–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.set("converts", 0)
        self.set("r_converts", 0)
        self.set("case", 0)
        self.set("r_case", 0)
        self.set("mif", 0)
        self.set("crystal", 0)
        self.set("plasma", 0)
        self.set("zv", 0)
        call.edit(call, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ –∫–µ–π—Å–∞—Ö –∏ –ø–ª–∞–∑–º–µ –æ—á–∏—â–µ–Ω–∞")
