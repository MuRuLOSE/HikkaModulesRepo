from hikkatl.types import Message, PeerUser, PeerChat, PeerChannel
import hikkatl.utils as TelethonUtils
from .. import loader, utils

"""
    ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  
    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà  
    ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 


    PinMoreChats
    üìú Licensed under the GNU AGPLv3	
"""


# meta desc: desc
# meta developer: @BruhHikkaModules


@loader.tds
class PinMoreChats(loader.Module):
    async def client_ready(self, db, client):
        self.db = db
        self._chats = self.pointer("chats", [])

    strings = {
        "name": "PinMoreChats",
        "_cls_doc": " - Allows you to bookmark more than 5 or 10 chats (WARNING! IT DOES NOT PIN CHATS IN TELEGRAM, IT JUST MAKES A LIST OF YOUR CHATS ANCHORED BY THIS MODULE, REMINDER, USERBOT CAN NO MORE THAN YOU CAN)",
        "added": "<b> <emoji document_id=5197688912457245639>‚úÖ</emoji> Added chat <code>{}</code> <code>{}</code> </b>",
        "aleardy_in": "<b> <emoji document_id=5440660757194744323>‚ÄºÔ∏è</emoji> This chat is already in the pinned</b>",
        "aleardy_not_in": "<b> <emoji document_id=5440660757194744323>‚ÄºÔ∏è</emoji> This chat is not in the pinned</b>",
        "deleted": "<b> <emoji document_id=5447644880824181073>‚ö†Ô∏è</emoji> Chat removed from pinned</b>",
        "pinned": "<b>Pinned chats:</b>\n\n",
    }
    strings_ru = {
        "_cls_doc": "–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–∫—Ä–µ–ø–∏—Ç—å –±–æ–ª—å—à–µ —á–µ–º 5 –∏–ª–∏ 10 —á–∞—Ç–æ–≤ (–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï! –û–ù–û –ù–ï –ó–ê–ö–†–ï–ü–õ–Ø–ï–¢ –ß–ê–¢–´ –í –¢–ï–õ–ï–ì–†–ê–ú–ú–ï, –ê –ü–†–û–°–¢–û –î–ï–õ–ê–ï–¢ –°–ü–ò–°–û–ö –ò–ó –í–ê–®–ò–• –ß–ê–¢–û–í –ó–ê–ö–†–ï–ü–õ–Å–ù–ù–´–ú –≠–¢–ò–ú –ú–û–î–£–õ–ï–ú, –ù–ê–ü–û–ú–ò–ù–ê–Æ, –Æ–ó–ï–†–ë–û–¢ –ú–û–ñ–ï–¢ –ù–ï –ë–û–õ–¨–®–ï –ß–ï–ú –í–´<)",
        "added": "<b> <emoji document_id=5197688912457245639>‚úÖ</emoji> –î–æ–±–∞–≤–ª–µ–Ω —á–∞—Ç <code>{}</code> <code>{}</code> </b>",
        "aleardy_in": "<b> <emoji document_id=5440660757194744323>‚ÄºÔ∏è</emoji> –≠—Ç–æ—Ç —á–∞—Ç —É–∂–µ –µ—Å—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö</b>",
        "aleardy_not_in": "<b> <emoji document_id=5440660757194744323>‚ÄºÔ∏è</emoji> –≠—Ç–æ–≥–æ —á–∞—Ç–∞ –Ω–µ—Ç –≤ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö</b>",
        "deleted": "<b> <emoji document_id=5447644880824181073>‚ö†Ô∏è</emoji> –ß–∞—Ç —É–¥–∞–ª—ë–Ω –∏–∑ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö</b>",
        "pinned": "<b>–ó–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ —á–∞—Ç—ã:</b>\n\n",
    }

    @loader.command(
        ru_doc=" - –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç –≤ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö",
    )
    async def pinchat(self, message: Message):
        """- Add chat to pinned"""
        peer = TelethonUtils.get_peer(message.peer_id)
        added = "maybe error in code, but i dont care"
        if message.chat_id in self._chats:
            await utils.answer(message, self.strings("aleardy_in"))
            return

        self._chats.append(message.chat_id)
        entity = await self.client.get_entity(message.chat_id)
        if isinstance(peer, PeerUser):
            added = self.strings("added").format(message.chat_id, entity.first_name)
        elif isinstance(peer, PeerChat) or isinstance(peer, PeerChannel):
            added = self.strings("added").format(message.chat_id, entity.title)

        await utils.answer(message, added)

    @loader.command(ru_doc=" - –£–¥–∞–ª–∏—Ç—å —á–∞—Ç –∏–∑ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö")
    async def unpinchat(self, message):
        """- Remove chat from pinned"""

        if message.chat_id not in self._chats:
            await utils.answer(message, self.strings("aleardy_not_in"))
            return

        self._chats.remove(message.chat_id)
        await utils.answer(message, self.strings("deleted"))

    @loader.command(ru_doc=" - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ —á–∞—Ç—ã")
    async def listpinchats(self, message):
        """- View pinned chats"""

        name = ""
        chats = ""
        for chat in self._chats:
            peer = TelethonUtils.get_peer(chat)
            chat_id = ""
            try:
                entity = await self.client.get_entity(int(chat))
            except ValueError:
                name = "–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
            try:
                chat_id = chat.replace(
                    -100,
                )
            except Exception:
                pass  # –ø—Ä–æ—Å—Ç–æ –µ—Å–ª–∏ –Ω–µ—Ç—É -100 —Ç–æ –∏ –Ω–µ –Ω–∞–¥–æ
            try:
                if isinstance(peer, PeerUser):
                    name = entity.first_name
                elif isinstance(peer, PeerChat):
                    name = entity.title
                elif isinstance(peer, PeerChannel):
                    name = entity.title
                else:
                    name = entity.title
            except Exception:
                pass
            messages = await self.client.get_messages(chat_id, limit=1)
            max_message_id = messages[0].id
            chats += f"<a href=tg://privatepost?channel={chat}&post={max_message_id}>{name}</a>\n"

        await utils.answer(
            message, self.strings("pinned") + chats
        )  # –ü–æ—á–µ–º—É —á–µ—Ä–µ–∑ –ø–ª—é—Å? –ü–æ—Ç–æ–º—É —á—Ç–æ f-string —Ä—É–≥–∞–µ—Ç—Å—è SyntaxError: f-string: unmatched '('

    @loader.command(ru_doc=" - FAQ –ø–æ –º–æ–¥—É–ª—é")
    async def pmcfaq(self, message):
        """- FAQ for module"""
