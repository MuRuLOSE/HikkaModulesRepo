
# ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# '''–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –∫–∞–∫—É—é —Ç–æ –∏–¥–µ—é, —Ç–æ —É–ø–æ–º—è–Ω–∏—Ç–µ –º–µ–Ω—è –≤ –∫–æ–¥–µ, —Å–ø–∞—Å–∏–±–æ (–Ω–æ —Ñ—É–Ω–∫—Ü–∏—é –ø–∏—à–∏—Ç–µ —Å–∞–º–∏)'''

# ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# Not licensed
# meta developer: @bruhHikkaModules 
__version__ = (0,0,5)

from telethon.tl.types import Message, ChatAdminRights
from telethon import functions
import asyncio
from .. import loader, utils
import re

@loader.tds
class AutoShaxta(loader.Module): 
    """–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ –≤—ã–±–æ—Ä–∞ —à–∞—Ö—Ç—ã"""

    strings = {
        "name": "AutoShaxta"
    }
    
    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "status_shaxta",
                False,
                lambda: None,
                validator=loader.validators.Boolean()
            )
        )
        
        
    @loader.watcher()
    async def watcher(self,message):
    	if message.chat_id == 5522271758 and "üîì –û—Ç–∫—Ä—ã—Ç–∞ –Ω–æ–≤–∞—è —à–∞—Ö—Ç–∞:" in message.raw_text:
    		pattern =  "–û—Ç–∫—Ä—ã—Ç–∞ –Ω–æ–≤–∞—è —à–∞—Ö—Ç–∞: <code>(.*?)</code>"
    		match = re.search(pattern, message.text, re.DOTALL)
    		if match:
    			mine = match.group(1)
    		if self.config["status_shaxta"]:
    			self.client.send_message("@mine_evo_bot",mine)
    @loader.command()
    async def auto_shaxt(self,message):
    	''' - –í–∫–ª—é—á–∏—Ç—å –≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —à–∞—Ö—Ç—ã'''
    	self.config["status_shaxta"] = not self.config["status_shaxta"]
    	status = (
    	"<b>–í–∫–ª—é—á–µ–Ω–æ –∞–≤—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —à–∞—Ö—Ç</b>"
    	if self.config["status_shaxta"]
    	else "<b>–í—ã–∫–ª—é—á–µ–Ω–æ –∞–≤—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —à–∞—Ö—Ç</b>"
    	)
    	await utils.answer(message,status)
    
