__version__ = (0, 0, 5)

from telethon.tl.types import Message, ChatAdminRights
from telethon import functions
import asyncio
from .. import loader, utils
import re

"""
    ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  
    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà  
    ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 


    ChannelCheck
    üìú Licensed under the GNU AGPLv3	
"""


# meta desc: desc
# meta developer: @BruhHikkaModules


@loader.tds
class ChannelCheck(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –∫–∞–Ω–∞–ª–µ."""

    strings = {
        "name": "ChannelCheck",
        "not_channel": f" Not in the channel ",
        "in_channel": f" Located in the channel ",
    }
    strings_ru = {
        "not_channel": f" –ù–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞–Ω–∞–ª–µ ",
        "in_channel": f" –ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞–Ω–∞–ª–µ ",
    }

    @loader.command()
    async def checksub(self, message):
        """[–∞–π–¥–∏ –∏–ª–∏ —é–∑–µ—Ä–Ω–µ–π–º –∫–∞–Ω–∞–ª–∞] [—é–∑–µ—Ä–Ω–µ–π–º –∏–ª–∏ –∞–π–¥–∏ —á–µ–ª–æ–≤–µ–∫–∞]- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —á–µ–ª–æ–≤–µ–∫ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≤–∞–º–∏ –∫–∞–Ω–∞–ª–µ"""
        status = None
        args = utils.get_args_raw(message)
        user_info = args.split()[1]
        channel_info = args.split()[0]

        channel = await self.client.get_entity(channel_info)
        user = await self.client.get_entity(user_info)

        check_user = await self.client.get_participants(channel)
        check_member = any(participant.id == user.id for participant in check_user)
        if check_member:
            status = self.strings["in_channel"]
            await utils.answer(
                message, f"ü•≥ <b>{user.username}</b>{status}<b>{channel.title}</b>"
            )
        else:
            status = self.strings["not_channel"]
            await utils.answer(
                message, f"üòì <b>{user.username}</b>{status}<b>{channel.title}</b>"
            )
