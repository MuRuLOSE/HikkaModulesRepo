# ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# '''–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –∫–∞–∫—É—é —Ç–æ –∏–¥–µ—é, —Ç–æ —É–ø–æ–º—è–Ω–∏—Ç–µ –º–µ–Ω—è –≤ –∫–æ–¥–µ, —Å–ø–∞—Å–∏–±–æ (–Ω–æ —Ñ—É–Ω–∫—Ü–∏—é –ø–∏—à–∏—Ç–µ —Å–∞–º–∏)'''

# ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# Not licensed
# meta developer: @bruhHikkaModules 
version = (0,0,5)

from telethon.tl.types import Message, ChatAdminRights
from telethon import functions
import asyncio
from .. import loader, utils
import re
@loader.tds
class PerevodLimitsX(loader.Module): 
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –ª–∏–º–∏—Ç–æ–≤ –ø–æ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ –ß–∏—Ç–∞–π—Ç–µ .faq"""

    strings = {
        "name": "PerevodLimitsX",
        "time_perevod": "–ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞"
    }

    async def client_ready(self, client, db):
        self._db = db
        self._backup_channel, _ = await utils.asset_channel(
            self._client,
            "LOGS PerevodLimitsX",
            "–ì—Ä—É–ø–ø–∞ –¥–ª—è –ª–æ–≥–æ–≤ –æ –ø–µ—Ä–µ–≤–æ–¥–∞—Ö –º–æ–¥—É–ª—è PerevodLimitsX –ù–µ —Ç—Ä–æ–≥–∞–π—Ç–µ!",
            silent=True,
            archive=True,
            _folder="hikka",
        )

        await self.client(functions.channels.InviteToChannelRequest(self._backup_channel, ['@mine_evo_bot']))
        await self.client(functions.channels.EditAdminRequest(
                channel=self._backup_channel,
                user_id="@mine_evo_bot",
                admin_rights=ChatAdminRights(ban_users=True, post_messages=True, edit_messages=True),
                rank="–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫",
            )
        )
    
    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "time_perevod",
                2.0,
                lambda: self.strings["time_perevod"],
                validator=loader.validators.Float()
            )
        )
    
        
    @loader.command()
    async def perevodx(self,message):
        ''' - [–ù–∏–∫ –ø–µ—Ä–µ–≤–æ–¥–∞] [–°–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å] - –ü–µ—Ä–µ–≤–æ–¥ –ª–∏–º–∏—Ç–æ–≤'''
        args = utils.get_args_split_by(message, " ")
        async with self.client.conversation("@mine_evo_bot") as conv:
            await conv.send_message("–±")
            res = await conv.get_response()
            pattern = "<b>–ë–∞–ª–∞–Ω—Å:</b>  (.*?)\n"
            match = re.search(pattern, res.text,re.DOTALL)
            if match:
            	balance = match.group(1)
            balance = match.group(1)
            await conv.send_message(f"–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ {args[0]} {balance}")
            res = await conv.get_response()
            if "–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥" in res.text:
            	await utils.answer(message,"‚ö†Ô∏è –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç! –Ø –Ω–µ —Å–º–æ–≥ –≤—ã—è—Å–Ω–∏—Ç—å –ª–∏–º–∏—Ç –∏–≥—Ä–æ–∫–∞ –∏–∑-–∑–∞ –±–∞–≥–∞ –º–∞–π–Ω–µ–≤–æ!")
            	return
            pattern = "\n(.*?)$"
            if match := re.search(pattern, res.message, re.DOTALL):
                sum = match.group(1).replace("$","")

            conv.cancel()
            ost = 0
            self.set("full",args[1])
            await utils.answer(message,"üíñ –Ø –Ω–∞—á–∞–ª –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å!")
            for _ in range(int(args[1])+1):
                self._db.get(__name__,"ost",0)
                await self.client.send_message("@mine_evo_bot",f"–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ {args[0]} {sum}")
                await asyncio.sleep(self.config["time_perevod"])
                ost += 1
                self.set("ost",ost)
            await utils.answer(message,"üí∏ –Ø –≤—Å—ë –ø–µ—Ä–µ–≤—ë–ª")
            await self.client.send_message(self._backup_channel,f"üéâ <b>–Ø –ø–µ—Ä–µ–≤–µ–ª –≤—Å–µ –ª–∏–º–∏—Ç—ã –∏–≥—Ä–æ–∫—É:</b> <code>{args[0]}</code> <b>–í –∫–æ–ª–∏—á—Å—Ç–≤–µ:</b> <code>{args[1]}</code>")
       	
       	
  
    
    @loader.command()
    async def perevfaq(self,message):
      ''' - FAQ –ø–æ —ç—Ç–æ–º—É –º–æ–¥—É–ª—é'''
      await utils.answer(message, "–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–≤–æ–¥–∞ –ª–∏–º–∏—Ç–æ–≤, –æ–±–Ω–æ–≤–ª—è—Ç—Å—è –ª–∏–º–∏—Ç—ã –ø–æ –º–µ—Ä–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –Ω–µ –±—É–¥–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ —ç—Ç–æ–º –∏ –±—ã–ª —Å–º—ã—Å–ª —É–±–∏—Ä–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤.\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫–∞—Ç—å –Ω–µ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞. –ò–Ω–∞—á–µ —ç—Ç–æ –ø–æ–ª–æ–º–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫")
     
    @loader.command()
    async def limits(self,message):
    	''' - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –ª–∏–º–∏—Ç–æ–≤ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏'''
    	full = self.get("full",0)
    	ost = self.get("ost",0)
    	await utils.answer(message,f"üí∏ <b>–í—ã –ø–µ—Ä–µ–≤–µ–ª–∏:</b> <code>{ost-1}/{full}</code>")
    
    @loader.command()
    async def time_limits(self,message):
    	''' - –í—ã—è—Å–Ω–∏—Ç —Å–∫–æ–ª—å–∫–æ –≤–∞–º —Å–µ–∫—É–Ω–¥ –æ—Å—Ç–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏.'''
    	full = self.get("full",0)
    	time = self.config["time_perevod"]
    	ost = self.get("ost",0)
    	r = (int(full)-int(ost)+1)*time
    	await utils.answer(message,f"<b>‚è± –í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å</b> <code>{r} —Å–µ–∫</code>")
