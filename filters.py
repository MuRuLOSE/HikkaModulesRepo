from hikkatl.types import Message
from .. import loader, utils

"""
    ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  
    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà  
    ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 


    Filters
    üìú Licensed under the GNU AGPLv3	
"""

# meta desc: desc
# meta developer: @BruhHikkaModules


@loader.tds
class TextFilters(loader.Module):
    """- Module for filter text"""

    async def client_ready(self, db, client):
        self.db = db
        self.set("filter", "Dont care")

    strings = {
        "name": "TextFilters",
        "wrong": "Wrong Argument. \n\nupper - Capitalize\ncapitalize - Starts with a capital letter and the rest are small.\nlower - Reduces all letters\noff - Disable filters",
        "correct": "Filter changed to {}",
    }
    strings_ru = {
        "wrong": "–ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. \n\nupper - –ë–æ–ª—å—à–∏–µ –±—É–∫–≤—ã\ncapitalize - –ù–∞—á–∏–Ω–∞–µ—Ç —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞–ª–µ–Ω—å–∫–∏–µ\nlower - –£–º–µ–Ω—å—à–∞–µ—Ç –≤—Å–µ –±—É–∫–≤—ã\noff - –í—ã–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã",
        "correct": "–§–∏–ª—å—Ç—Ä —Å–º–µ–Ω—ë–Ω –Ω–∞ {}",
    }

    @loader.watcher()
    async def watcher(self, message):
        me = await self.client.get_me(id)
        try:
            if message.from_id == me.user_id and message.text:
                filter_txt = self.get("filter", "Dont care")

                if filter_txt == "lower":
                    try:
                        await message.edit(message.text.lower())
                    except Exception:
                        pass

                elif filter_txt == "upper":
                    try:
                        await message.edit(message.text.upper())
                    except Exception:
                        pass

                elif filter_txt == "capitalize":
                    try:
                        await message.edit(message.text.capitalize())
                    except Exception:
                        pass
                elif filter_txt == "off":
                    pass  # –ù—É –∞ —á–æ –¥–µ–ª–∞—Ç—å

        except AttributeError:
            pass  # –ù—É —ç—Ç–æ —Ö–µ—Ä–Ω—è —Å –∏–≤–µ–Ω—Ç–∞–º–∏, –ø–æ—ç—Ç–æ–º—É –¥–∞

    @loader.command(ru_doc=" - [lower / capitalize / upper / off] - –í—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä")
    async def filter_ch(self, message: Message):
        """- [lower / capitalize / upper / off] - Chose filter"""
        args = utils.get_args_raw(message)
        if args.lower() not in ["lower", "capitalize", "upper", "off"]:
            await utils.answer(message, self.strings("wrong"))
        else:
            await utils.answer(message, self.strings("correct").format(args))
            self.set("filter", args.lower())
