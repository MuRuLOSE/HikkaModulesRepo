from hikkatl.types import Message
from .. import loader, utils
from telethon.tl.types import MessageService
import asyncio

"""
    ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  
    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà  
    ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 


    ControlSpam
    üìú Licensed under the GNU AGPLv3	
"""

# meta desc: desc
# meta developer: @BruhHikkaModules


@loader.tds
class ControlSpam(loader.Module):
    """–ù–µ –ø—Ä–æ—Å—Ç–æ —Å–ø–∞–º—å, –∞ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π"""

    strings = {"name": "ControlSpam", "hello": "Hello world!"}
    strings_ru = {"hello": "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä!"}

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "status",
                True,
                lambda: "–ü—Ä–æ—Å—Ç–æ —Å—Ç–∞—Ç—É—Å —Å–ø–∞–º–∞",
                validator=loader.validators.Boolean(),
            )
        )

    @loader.command()
    async def spam(self, message: Message):
        """[–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–º–∞] [—Ç–µ–∫—Å—Ç / —Ä–µ–ø–ª–∞–π]  - –ù–∞—á–∞—Ç—å —Å–ø–∞–º"""
        self.config["status"] = True
        args = utils.get_args(message)
        a = 0
        reply = await message.get_reply_message()
        text = "Something get wrong"
        type_topic = False
        topic_id = None
        if reply:
            if isinstance(reply, MessageService):
                text = " ".join(args[1:])
                type_topic = True
                topic_id = message.reply_to_msg_id
            else:
                text = reply.text
        else:
            text = " ".join(args[1:])
        await utils.answer(message, "–Ø –Ω–∞—á–∞–ª —Å–ø–∞–º–∏—Ç—å")
        while self.config["status"]:
            if a == int(args[0]):
                break
            a += 1

            if type_topic:
                await self.client.send_message(message.chat_id, text, reply_to=topic_id)
            else:
                await self.client.send_message(message.chat_id, text)

    @loader.command()
    async def delayspam(self, message: Message):
        """[–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–º–∞] [–ó–∞–¥–µ—Ä–∂–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö] [—Ç–µ–∫—Å—Ç / —Ä–µ–ø–ª–∞–π]  - –ù–∞—á–∞—Ç—å —Å–ø–∞–º"""
        self.config["status"] = True
        args = utils.get_args(message)
        a = 0
        reply = await message.get_reply_message()
        text = "Something get wrong"
        type_topic = False
        topic_id = None
        if reply:
            if isinstance(reply, MessageService):
                text = " ".join(args[2:])
                type_topic = True
                topic_id = message.reply_to_msg_id
            else:
                text = reply.text
        else:
            text = " ".join(args[2:])
        await utils.answer(message, "–Ø –Ω–∞—á–∞–ª —Å–ø–∞–º–∏—Ç—å")
        while self.config["status"]:
            if a == int(args[0]):
                break
            a += 1
            if type_topic:
                await self.client.send_message(message.chat_id, text, reply_to=topic_id)
            else:
                await self.client.send_message(message.chat_id, text)
            await asyncio.sleep(int(args[1]))

    @loader.command()
    async def spam_stop(self, message: Message):
        """- –ó–∞–∫–æ–Ω—á–∏—Ç—å –≤–µ—Å—å —Å–ø–∞–º"""
        self.config["status"] = False
        await utils.answer(message, "–Ø –∑–∞–∫–æ–Ω—á–∏–ª —Å–ø–∞–º–∏—Ç—å")
