from hikkatl.types import Message
from .. import loader, utils
from steam_web_api import Steam
from datetime import datetime
import logging

"""
    ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  
    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà  
    ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 


    Module name
    üìú Licensed under the GNU AGPLv3	
"""

# meta banner: link
# meta desc: desc
# meta developer: @BruhHikkaModules
# requires: python-steam-api beautifulsoup4

logger = logging.getLogger(__name__)


@loader.tds
class SteamClient(loader.Module):
    """Module for manage steam"""

    strings = {
        "name": "SteamClient",
        "profile_data": "<emoji document_id=5936017305585586269>ü™™</emoji> <b>Steam ID:</b> <code>{id}</code>"
        "\n<emoji document_id=5870994129244131212>üë§</emoji> <b>Username:</b> <code>{username}</code>"
        "\n<emoji document_id=5933613451044720529>üôÇ</emoji> <b>Steam level:</b> <code>{level}</code>"
        "\n<emoji document_id=5879770735999717115>üë§</emoji> <b>Profile URL:</b> <code>{profileurl}</code>"
        "\n<emoji document_id=5872829476143894491>üö´</emoji> <b>VAC-BAN INFO:</b> {vacinfo}"
        "\n<emoji document_id=5967412305338568701>üìÖ</emoji> <b>Registration date:</b> <code>{registration_date}</code>",
        "api_key_updated": "<emoji document_id=5292226786229236118>üîÑ</emoji> <b>API key has been updated</b>",
        "vac_ban":
            "\n    <b>VACBanned</b>: <code>{vacbanned}</code>"
            "\n    <b>Number of VAC-BANs</b>: <code>{numberofvacbans}</code>"
            "\n    <b>Days since last VAC-BAN</b>: <code>{dayslastvac}</code>"
            "\n    <b>Number of game bans</b>: <code>{numberofgamebans}</code>",
        "vac_ban_title": "<b>Information about bans of</b> <code>{}</code>:",
        "game_info_title": "<b>Information about games of</b> <code>{}</code>",
        "game_info_template": 
            "\n    <b>Name:</b> <code>{name}</code>"
            "\n    <b>Total playtime:</b> <code>{playtime_forever}</code>minutes"
            "\n    <b>Played in the last two weeks:</b> <code>{playtime_2weeks}</code>minutes"
            "\n    <b>Last launch:</b> <code>{lastplay}</code>",
    }

    strings_ru = {
        "profile_data": "<emoji document_id=5936017305585586269>ü™™</emoji> <b>Steam ID:</b> <code>{id}</code>"
        "\n<emoji document_id=5870994129244131212>üë§</emoji> <b>–Æ–∑–µ—Ä–Ω–µ–π–º:</b> <code>{username}</code>"
        "\n<emoji document_id=5933613451044720529>üôÇ</emoji> <b>–£—Ä–æ–≤–µ—Ä—å Steam:</b> <code>{level}</code>"
        "\n<emoji document_id=5879770735999717115>üë§</emoji> <b>–ü—Ä–æ—Ñ–∏–ª—å:</b> <code>{profileurl}</code>"
        "\n<emoji document_id=5872829476143894491>üö´</emoji> <b>VAC-BAN INFO:</b> {vacinfo}"
        "\n<emoji document_id=5967412305338568701>üìÖ</emoji> <b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> <code>{registration_date}</code>",
        "api_key_updated": "<emoji document_id=5292226786229236118>üîÑ</emoji> <b>API –∫–ª—é—á –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω</b>",
        "vac_ban":
            "\n    <b>VACBanned</b>: <code>{vacbanned}</code>"
            "\n    <b>–ß–∏—Å–ª–æ VAC-BAN–æ–≤</b>: <code>{numberofvacbans}</code>"
            "\n    <b>–î–Ω–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ VAC-BAN–∞</b>: <code>{dayslastvac}</code>"
            "\n    <b>–ß–∏—Å–ª–æ –∏–≥—Ä–æ–≤—ã—Ö –±–∞–Ω–æ–≤</b>: <code>{numberofgamebans}</code>",
        "vac_ban_title": "<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–Ω–∞—Ö</b> <code>{}</code>:",
        "game_info_title": "<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–≥—Ä–∞—Ö</b> <code>{}</code>",
        "game_info_template": 
            "\n    <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> <code>{name}</code>"
            "\n    <b>–ù–∞–∏–≥—Ä–∞–Ω–æ –≤—Å–µ–≥–æ:</b> <code>{playtime_forever}</code>–º–∏–Ω"
            "\n    <b>–ù–∞–∏–≥—Ä–∞–Ω–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –Ω–µ–¥–µ–ª–∏:</b> <code>{playtime_2weeks}</code>–º–∏–Ω"
            "\n    <b>–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—É—Å–∫:</b> <code>{lastplay}</code>",
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "apikey",
                "Here's your api key",
                "About API key: https://steamcommunity.com/dev/apikey",
                validator=loader.validators.Hidden(),
            )
        )
        self.debug = False

    async def client_ready(self, db, client):
        self.steam = Steam(self.config["apikey"])

    def resolve_id(self, username):
        data = self.steam.users.search_user(username)
        return data["player"]["steamid"]

    @loader.command(
        ru_doc=" [–Æ–∑–µ—Ä–Ω–µ–π–º] –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (--id –ø–æ–∏—Å–∫ –ø–æ id)"
    )
    async def searchuser(self, message: Message):
        """ [Username] (--raw  raw json answer) (--id search by id) - Search user"""
        args = utils.get_args_raw(message).split()

        user = args[0]

        userdata = None
        if "--id" in args:
            userdata = self.steam.users.get_user_details(int(user))["player"]
            level = self.steam.users.get_user_steam_level(int(user))["player_level"]
            vacdata = self.steam.users.get_player_bans(int(user))["players"][0]

        else:
            userdata = self.steam.users.search_user(user)["player"]
            uid = self.resolve_id(user)
            level = self.steam.users.get_user_steam_level(uid)["player_level"]
            vacdata = self.steam.users.get_player_bans(uid)["players"][0]

        
        vacinfo = self.strings["vac_ban"].format(
            vacbanned=vacdata["VACBanned"],
            numberofvacbans=vacdata["NumberOfVACBans"],
            dayslastvac=vacdata["DaysSinceLastBan"],
            numberofgamebans=vacdata["NumberOfGameBans"]
        )

        account_created_date = datetime.fromtimestamp(userdata["timecreated"])
        account_created_formatted = account_created_date.strftime("%d.%m.%Y")
        await utils.answer_file(
            message,
            userdata["avatarfull"],
            caption=self.strings["profile_data"].format(
                id=userdata["steamid"],
                username=userdata["personaname"],
                level=level,
                profileurl=userdata["profileurl"],
                vacinfo=vacinfo,
                avatar=userdata["avatar"],
                registration_date=account_created_formatted,
            ),
        )

    @loader.command(
        ru_doc=" [–Æ–∑–µ—Ä–Ω–µ–π–º] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ VAC-BAN–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (--id –ø–æ–∏—Å–∫ –ø–æ id)"
    )
    async def vacbaninfo(self, message: Message):
        ''' [Username] Informbation about user VAC-BANs (--id search by id)'''

        args = utils.get_args_raw(message).split()

        user = args[0]
        
        if "--id" in args:
            userdata = self.steam.users.get_user_details(int(user))["player"]
            vacdata = self.steam.users.get_player_bans(int(user))["players"][0]

        else:
            userdata = self.steam.users.search_user(user)["player"]
            uid = self.resolve_id(user)
            vacdata = self.steam.users.get_player_bans(uid)["players"][0]
        
        vacinfo = self.strings["vac_ban"].format(
            vacbanned=vacdata["VACBanned"],
            numberofvacbans=vacdata["NumberOfVACBans"],
            dayslastvac=vacdata["DaysSinceLastBan"],
            numberofgamebans=vacdata["NumberOfGameBans"]
        )
        vactitle = self.strings["vac_ban_title"]
        await utils.answer(
            message, 
            response=vactitle.format(userdata["personaname"]) + vacinfo
        )

    @loader.command(
        ru_doc=" - [–Æ–∑–µ—Ä–Ω–µ–π–º] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–≥—Ä–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (--id –ø–æ–∏—Å–∫ –ø–æ id)"
    )
    async def gameownedlist(self, message: Message):
        ''' - [Username] Informbation about user games (--id search by id)'''

        args = utils.get_args_raw(message).split()

        user = args[0]
        
        if "--id" in args:
            userdata = self.steam.users.get_user_details(int(user))["player"]
            gamedata = self.steam.users.get_owned_games(user)['games']

        else:
            userdata = self.steam.users.search_user(user)["player"]
            uid = self.resolve_id(user)
            gamedata = self.steam.users.get_owned_games(uid)['games']
        
        # –∏–Ω—Ñ–æ –æ –∏–≥—Ä–∞—Ö vacinfo = self.strings["vac_ban"].format(
            #vacbanned=vacdata["VACBanned"],
            #numberofvacbans=vacdata["NumberOfVACBans"],
            #dayslastvac=vacdata["DaysSinceLastBan"],
            #numberofgamebans=vacdata["NumberOfGameBans"]
        #)

        gameinfo_templates = [] 
        for info in gamedata:
            gameinfo = self.strings["game_info_template"].format(
                name=info['name'],
                playtime_forever=info['playtime_forever'],
                playtime_2weeks=info.get('playtime_2weeks') or 0,
                lastplay=info['rtime_last_played']
            )

            gameinfo_templates.append(gameinfo)

        print(gameinfo)
        logger.info(gameinfo.join('\n'))
    
        await utils.answer(
            message, 
            response=self.strings['game_info_title'].format(userdata["personaname"]) 
            + '\n\n'.join(gameinfo_templates)
        )

    @loader.command()
    async def execsteamcode(self, message: Message):
        ''' DO NOT USE THIS COMMAND! IT ONLY WORKS WHEN DEBUGGING IS ENABLED! THIS COMMAND IS FOR DEVELOPER'''
        if not self.debug:
            await utils.answer(
            message, 
            "this command does nothing if debug-mode is not enabled."
            "don't try to use it." 
            "even if you get into the code and enable debug-mode, all responsibility for actions with this command is yours."
            )
        else:
            environment = {
                'client': self.steam
            }
            args = utils.get_args_raw(message)

            await utils.answer(message, str(eval(args, environment)))

    @loader.command(
        ru_doc=" - –û–±–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á"
    )
    async def updateapikey(self, message: Message):
        """ - Update API key"""
        self.steam = Steam(self.config["apikey"])
        await utils.answer(message, self.strings["api_key_updated"])
