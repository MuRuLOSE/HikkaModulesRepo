from hikkatl.types import Message
from .. import loader, utils

"""
    ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  
    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà  
    ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 


    SearchersGenQuery
    üìú Licensed under the GNU AGPLv3	
"""

# meta desc: desc
# meta developer: @BruhHikkaModules


@loader.tds
class GoogleQueryGen(loader.Module):
    """- Create links for search engines query"""

    strings = {"name": "GoogleQueryGen"}
    strings_ru = {"_cls_doc": " - –°–æ–∑–¥–∞—ë—Ç —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"}

    @loader.command(ru_doc=" - [–ê—Ä–≥—É–º–µ–Ω—Ç—ã] - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –≥—É–≥–ª –∑–∞–ø—Ä–æ—Å–∞")
    async def GoogleQueryGen(self, message: Message):
        """- [Args] - Gen link for google query"""
        args_raw = utils.get_args_split_by(message, " ")
        args = "+".join(args_raw)
        await utils.answer(message, f"https://google.com/search?q={args}")

    @loader.command(ru_doc=" - [–ê—Ä–≥—É–º–µ–Ω—Ç—ã] - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è —è–Ω–¥–µ–∫—Å –∑–∞–ø—Ä–æ—Å–∞")
    async def YandexQueryGen(self, message: Message):
        """- [Args] - Gen link for yandex query"""
        args_raw = utils.get_args_split_by(message, " ")
        args = "+".join(args_raw)
        await utils.answer(message, f"https://yandex.ru/search/?text={args}")

    @loader.command(ru_doc=" - [–ê—Ä–≥—É–º–µ–Ω—Ç—ã] - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –±–∏–Ω–≥ –∑–∞–ø—Ä–æ—Å–∞")
    async def BingQueryGen(self, message: Message):
        """- [Args] - Gen link for bing query"""
        args_raw = utils.get_args_split_by(message, " ")
        args = "+".join(args_raw)
        await utils.answer(message, f"https://bing.com/search?q={args}")

    @loader.command(
        ru_doc=" - [–ê—Ä–≥—É–º–µ–Ω—Ç—ã] - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –£—Ç–∫–∞–£—Ç–∫–∞–í–ø–µ—Ä—ë–¥ –∑–∞–ø—Ä–æ—Å–∞"
    )
    async def DDGQueryGen(self, message: Message):
        """- [Args] - Gen link for DuckDuckGo query"""
        args_raw = utils.get_args_split_by(message, " ")
        args = "+".join(args_raw)
        await utils.answer(message, f"https://duckduckgo.com/?q={args}")

    @loader.command(ru_doc=" - [–ê—Ä–≥—É–º–µ–Ω—Ç—ã] - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è —è—Ö—É –∑–∞–ø—Ä–æ—Å–∞")
    async def YahooQueryGen(self, message: Message):
        """- [Args] - Gen link for yahoo query"""
        args_raw = utils.get_args_split_by(message, " ")
        args = "+".join(args_raw)
        await utils.answer(message, f"https://search.yahoo.com/search?p={args}")
