from hikkatl.types import Message
from .. import loader, utils

"""
    ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  
    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà  
    ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 


    Module name
    üìú Licensed under the GNU AGPLv3	
"""

# meta banner: https://0x0.st/HYVP.jpg
# meta desc: desc
# meta developer: @BruhHikkaModules

changelog = "Added reply to addignore and removeignore"

__version__ = (1, 2, 0)


@loader.tds
class FuckTagOne(loader.Module):
    f"""
    Don't like to be mentioned by a certain person?
    Now you can just add his mentions to your ignore!
    Changelog: {changelog}
    """

    emoji = {
        "error": "<emoji document_id=5778527486270770928>‚ùå</emoji>",
        "successfully": "<emoji document_id=5776375003280838798>‚úÖ</emoji>",
        "sad": "<emoji document_id=5391120018832369983>üò≠</emoji>",
        "list": "<emoji document_id=5873153278023307367>üìÑ</emoji>",
        "animated_fire": "<emoji document_id=5420315771991497307>üî•</emoji>",
    }

    strings = {
        "name": "FuckTagOne",
        "aleardy_in_list": "%s <b>Id: {id} has already been added to the list!</b>"
        % emoji["error"],
        "added_list": "%s ID: {id} Added to ignore." % emoji["successfully"],
        "not_mention_me": "%s <b>Don't mention me, please :(</b>" % emoji["sad"],
        "list_ids": "%s <b>Chats list:</b>\n{ids}" % emoji["list"],
        "not_in_list": "%s <b>Whoa-whoa, you want to delete something that's not there? </b>"
        % emoji["error"],
        "removed_from_ignore": "%s <b>{id} Removed from ignore</b> %s"
        % (emoji["successfully"], emoji["animated_fire"]),
    }

    strings_ru = {
        "_cls_doc": "–ù–µ –ª—é–±–∏—à—å –∫–æ–≥–¥–∞ —Ç–µ–±—è —É–ø–æ–º–∏–Ω–∞–µ—Ç –∫–∞–∫–æ–π-—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫?\n"
        "–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –∏–≥–Ω–æ—Ä!\n"
        f"–°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {changelog}",
        "aleardy_in_list": "%s <b>–ê–π–¥–∏: {id} —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫!</b>"
        % emoji["error"],
        "added_list": "%s –ê–π–¥–∏: {id} –î–æ–±–∞–≤–ª–µ–Ω –≤ –∏–≥–Ω–æ—Ä." % emoji["successfully"],
        "not_mention_me": "%s <b>–ù–µ —É–ø–æ–º–∏–Ω–∞–π—Ç–µ –º–µ–Ω—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ :(</b>" % emoji["sad"],
        "list_ids": "%s <b>–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤:</b>\n{ids}" % emoji["list"],
        "not_in_list": "%s <b>–í–æ—É-–≤–æ—É, —Ç—ã —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å —Ç–æ —á–µ–≥–æ –Ω–µ—Ç—É?</b>"
        % emoji["error"],
        "removed_from_ignore": "%s <b>{id} –£–¥–∞–ª—ë–Ω –∏–∑ –∏–≥–Ω–æ—Ä–∞</b> %s"
        % (emoji["successfully"], emoji["animated_fire"]),
    }

    async def client_ready(self, db, client):
        self.db = db

        self._ignore = self.pointer("ignore", [])

        self._ignore_ids = self.pointer(
            "ignore_people", []
        )  # it's so that if your mentions (from one account) get spammed, you don't get floodwaiting.

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "SendMessageOnMention",
                True,
                lambda: "If you mentioned, and status is True, will be sended message ",
                validator=loader.validators.Boolean(),
            ),
        )

    @loader.loop(autostart=True, interval=600)
    async def clear_ratelimits(self):
        self._ignore_ids.clear()

    @loader.watcher()
    async def fucktags(self, message):
        ratelimit = None
        if not hasattr(message, "text") or not isinstance(message, Message):
            return

        if message.from_id in self._ignore and message.mentioned:
            await self._client.send_read_acknowledge(
                message.peer_id,
                message,
                clear_mentions=True,
            )

            if message.from_id not in self._ignore_ids:
                self._ignore_ids.append(message.from_id)
            else:
                ratelimit = True

            if ratelimit is not True and self.config["SendMessageOnMention"]:
                await self.client.send_message(
                    message.chat_id, self.strings["not_mention_me"], reply_to=message.id
                )

    @loader.command(
        ru_doc=" [id / reply] - –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–≥–Ω–æ—Ä –ª–∏—Å—Ç",
    )
    async def addignore(self, message: Message):
        """[id / reply] - Add to ignore list"""

        args = utils.get_args_raw(message)

        reply = await message.get_reply_message()
        
        if reply:
            args = reply.from_id 

        if args not in self._ignore:
            self._ignore.append(int(args))
            await utils.answer(message, self.strings["added_list"].format(id=args))

        else:
            await utils.answer(message, self.strings["aleardy_in_list"].format(id=args))

    @loader.command(ru_doc=" - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—Ç–æ —É –≤–∞—Å –≤ –∏–≥–Ω–æ—Ä–µ")
    async def ignorelist(self, message: Message):
        """ - Check who in ignore"""
        await utils.answer(
            message,
            self.strings["list_ids"].format(ids="\n".join(map(str, self._ignore))),
        )

    @loader.command(ru_doc=" [id / reply] - –£–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–≥–Ω–æ—Ä–∞")
    async def removeignore(self, message: Message):
        """[id / reply] - Remove from ignore list"""

        args = utils.get_args_raw(message)

        reply = await message.get_reply_message()

        if reply:
            args = reply.from_id

        if args not in self._ignore:
            await utils.answer(message, self.strings["not_in_list"])

        else:
            self._ignore.remove(int(args))
            await utils.answer(
                message, self.strings["removed_from_ignore"].format(id=int(args))
            )