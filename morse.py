from hikkatl.types import Message
from .. import loader, utils

__version__ = (3.14, 16, 18)

"""
    ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà  
    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà  
    ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 


    Module name
    üìú Licensed under the GNU AGPLv3	
"""

# meta desc: desc
# meta developer: @BruhHikkaModules


@loader.tds
class Morse(loader.Module):
    """- Decode and Encode morse code"""

    strings = {"name": "Morse"}
    strings_ru = {"_cls_doc": " - –ó–∞—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç –∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç –∞–∑–±—É–∫—É –º–æ—Ä–∑–µ"}

    @loader.command(ru_doc=" - [–¢–µ–∫—Å—Ç] - –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ –∞–∑–±—É–∫—É –º–æ—Ä–∑–µ")
    async def decode_morse(self, message: Message):
        """- [Text] - Translates into morse code"""
        args = utils.get_args_raw(message)
        morse_code = {
            "A": ".-",
            "B": "-...",
            "C": "-.-.",
            "D": "-..",
            "E": ".",
            "F": "..-.",
            "G": "--.",
            "H": "....",
            "I": "..",
            "J": ".---",
            "K": "-.-",
            "L": ".-..",
            "M": "--",
            "N": "-.",
            "O": "---",
            "P": ".--.",
            "Q": "--.-",
            "R": ".-.",
            "S": "...",
            "T": "-",
            "U": "..-",
            "V": "...-",
            "W": ".--",
            "X": "-..-",
            "Y": "-.--",
            "Z": "--..",
            "–ê": ".-",
            "–ë": "-...",
            "–í": ".--",
            "–ì": "--.",
            "–î": "-..",
            "–ï": ".",
            "–ñ": "...-",
            "–ó": "--..",
            "–ò": "..",
            "–ô": ".---",
            "–ö": "-.-",
            "–õ": ".-..",
            "–ú": "--",
            "–ù": "-.",
            "–û": "---",
            "–ü": ".--.",
            "–†": ".-.",
            "–°": "...",
            "–¢": "-",
            "–£": "..-",
            "–§": "..-.",
            "–•": "....",
            "–¶": "-.-.",
            "–ß": "---.",
            "–®": "----",
            "–©": "--.-",
            "–™": "--.--",
            "–´": "-.--",
            "–¨": "-..-",
            "–≠": "..-..",
            "–Æ": "..--",
            "–Ø": ".-.-",
        }
        text = args.upper()
        result = []
        for char in text:
            if char in morse_code:
                result.append(morse_code[char])
            else:
                result.append(char)
        await utils.answer(message, " ".join(result))

    @loader.command(ru_doc=" - [–¢–µ–∫—Å—Ç] - –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –∏–∑ –∞–∑–±—É–∫–∏ –º–æ—Ä–∑–µ –≤ —Ç–µ–∫—Å—Ç")
    async def encode_morse(self, message):
        """- [Text] - Translates from morse code"""
        args = utils.get_args_raw(message)
        morse_code = {
            ".-": "A",
            "-...": "B",
            "-.-.": "C",
            "-..": "D",
            ".": "E",
            "..-.": "F",
            "--.": "G",
            "....": "H",
            "..": "I",
            ".---": "J",
            "-.-": "K",
            ".-..": "L",
            "--": "M",
            "-.": "N",
            "---": "O",
            ".--.": "P",
            "--.-": "Q",
            ".-.": "R",
            "...": "S",
            "-": "T",
            "..-": "U",
            "...-": "V",
            ".--": "W",
            "-..-": "X",
            "-.--": "Y",
            "--..": "Z",
            " ": " ",
            ".-": "–ê",
            "-...": "–ë",
            ".--": "–í",
            "--.": "–ì",
            "-..": "–î",
            ".": "–ï",
            "...-": "–ñ",
            "--..": "–ó",
            "..": "–ò",
            ".---": "–ô",
            "-.-": "–ö",
            ".-..": "–õ",
            "--": "–ú",
            "-.": "–ù",
            "---": "–û",
            ".--.": "–ü",
            ".-.": "–†",
            "...": "–°",
            "-": "–¢",
            "..-": "–£",
            "..-.": "–§",
            "....": "–•",
            "-.-.": "–¶",
            "---.": "–ß",
            "----": "–®",
            "--.-": "–©",
            "--.--": "–™",
            "-.--": "–´",
            "-..-": "–¨",
            "..-..": "–≠",
            "..--": "–Æ",
            ".-.-": "–Ø",
        }

        morse_chars = args.split(" ")
        result = []

        for morse_char in morse_chars:
            if morse_char in morse_code:
                result.append(morse_code[morse_char])
            else:
                result.append(morse_char)

        await utils.answer(message, "".join(result))
